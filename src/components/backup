import React, { Component, useState, useEffect } from "react";
import { Map as LeafletMap, TileLayer } from "react-leaflet";
import "../styles/Map.css";
import { Circle, Popup } from "react-leaflet";
import { getAll_temp, getWorldData, getCountries, getCountryData } from "../API/api";

export default class Map extends Component {
    constructor(props) {
        super(props)

        this.state = {
            data: []
        }
    }

    makeCircle = (center, radius) => {
        return (
            <Circle
                className="mapc"
                center={center}
                color='rgba(233, 34, 34, 0.733)'
                fillColor="red"
                fillOpacity={0.2}
                radius={radius}
            ></Circle>

        )

    }
    async componentDidMount() {

        const data1 = await getAll_temp()
        this.setState({
            data: data1
        })
        console.log(this.state.data)

    }



    render() {

        return (
            <div className="map">
                <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.3/leaflet.css" />

                <LeafletMap
                    center={this.props.center} zoom={this.props.zoom}>
                    <TileLayer
                        url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
                        attribution='&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
                    />

                    {
                        this.state.data.map(x => 
                            <Circle
                                className="mapc"
                                center={[x.countryInfo.lat, x.countryInfo.long]}
                                color='rgba(233, 34, 34, 0.733)'
                                fillColor="red"
                                fillOpacity={0.2}
                                radius={x.active}
                            ></Circle>
                        )

                    }




                </LeafletMap>


            </div>
        );

    }
}
